{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/obiletcalendar\/createskeletonview"]}],"sections":[{"kind":"hero","chapter":"Create Demo Project","title":"Create Skeleton View","estimatedTimeInMinutes":10,"content":[]},{"tasks":[{"stepsSection":[{"type":"step","caption":[],"code":"c1-t2-s1-step1.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new SwiftUI View file named "},{"type":"codeVoice","code":"OBCalendarDemo.swift"}]}],"runtimePreview":"c1-t2-s1-step1.png"},{"runtimePreview":"c1-t2-s1-step2.png","content":[{"type":"paragraph","inlineContent":[{"text":"import ","type":"text"},{"type":"codeVoice","code":"ObiletCalendar"}]}],"caption":[],"type":"step","code":"c1-t2-s1-step2.swift","media":null},{"code":"c1-t2-s1-step3.swift","runtimePreview":"c1-t2-s1-step3.png","caption":[{"type":"paragraph","inlineContent":[{"text":"Add type methods to help when create ","type":"text"},{"type":"reference","overridingTitle":"Years","overridingTitleInlineContent":[{"text":"Years","type":"text"}],"isActive":true,"identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Year"}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"years"},{"type":"text","text":" variable and "},{"type":"codeVoice","code":"calendar"},{"type":"text","text":" to create "},{"type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBCalendar","isActive":true,"overridingTitle":"OBCalendar","overridingTitleInlineContent":[{"text":"OBCalendar","type":"text"}]},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Get ","type":"text"},{"code":"calendar","type":"codeVoice"},{"type":"text","text":" in "},{"type":"codeVoice","code":"Init"},{"text":" function of ","type":"text"},{"type":"codeVoice","code":"OBCalendarDemo"},{"text":" and get ","type":"text"},{"code":"years","type":"codeVoice"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"getYears"},{"text":" Type method.","type":"text"}]}],"type":"step","media":null},{"media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"type":"codeVoice","code":"calendarView"}]}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"OBCalendar has 2 initializer. ","type":"text"},{"isActive":true,"overridingTitle":"init","type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBCalendar\/init(years:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)","overridingTitleInlineContent":[{"text":"init","type":"text"}]},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBCalendar\/init(calendar:startingDate:endingDate:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)","isActive":true,"overridingTitleInlineContent":[{"text":"init","type":"text"}],"overridingTitle":"init"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Use to initializer that you want use.","type":"text"}]}],"code":"c1-t2-s1-step4.swift","runtimePreview":"c1-t2-s1-step4.png"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"calendarView"},{"type":"text","text":" in body."}]}],"caption":[],"code":"c1-t2-s1-step5.swift","media":null,"runtimePreview":"c1-t2-s1-step5.png"},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Set frame every dayâ€™s"}]}],"media":null,"type":"step","code":"c1-t2-s1-step6.swift","runtimePreview":"c1-t2-s1-step6.png"},{"caption":[],"code":"c1-t2-s1-step7.swift","media":null,"runtimePreview":"c1-t2-s1-step7.png","content":[{"inlineContent":[{"type":"text","text":"Months area is not clear."},{"text":" ","type":"text"},{"type":"text","text":"Add "},{"type":"codeVoice","code":"Month name"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Year"},{"type":"text","text":" to "},{"type":"codeVoice","code":"monthsView"},{"type":"text","text":" top and add "},{"type":"codeVoice","code":"Divider"}],"type":"paragraph"}],"type":"step"},{"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add padding to "},{"code":"monthContent","type":"codeVoice"}]}],"media":null,"runtimePreview":"c1-t2-s1-step8.png","code":"c1-t2-s1-step8.swift"}],"anchor":"Add-a-customization-view","title":"Add a customization view","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Add the ability for users to customize calendar"}],"type":"paragraph"}],"kind":"contentAndMedia","layout":"horizontal","mediaPosition":"trailing"}]}],"kind":"tasks"},{"kind":"callToAction","abstract":[{"text":"Improve the user interface by adding weekdays and a header view.","type":"text"}],"action":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference"},"title":"Improve User Interface","featuredEyebrow":"Tutorial"}],"metadata":{"role":"project","categoryPathComponent":"ObiletCalendar","category":"Tutorial","title":"Create Skeleton View"},"hierarchy":{"modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView","sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view"}]}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project"},{"projects":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Change"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView"}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface"},{"projects":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection","kind":"task"}]},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#IDK","kind":"task"}]},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","sections":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","kind":"task"}]}],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection"},{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View","projects":[{"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay","sections":[{"kind":"task","reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day"}]}]}],"paths":[["doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar","doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/$volume","doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project"]],"reference":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar"},"identifier":{"url":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView","interfaceLanguage":"swift"},"kind":"project","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ObiletCalendar/tutorials/ObiletCalendar/Implement-Date-Selection":{"abstract":[],"type":"topic","role":"article","url":"\/tutorials\/obiletcalendar\/implement-date-selection","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection","title":"Implement Date Selection","kind":"article"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView#Change":{"role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/changedayview#Change","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Change","abstract":[{"type":"text","text":"Change view of "},{"code":"day","type":"codeVoice"},{"type":"text","text":" by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitle":"Date Type","overridingTitleInlineContent":[{"type":"text","text":"Date Type"}]},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","isActive":true,"overridingTitle":"Range Type","overridingTitleInlineContent":[{"text":"Range Type","type":"text"}]}],"kind":"section","title":"Change","type":"section"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface#Add-Weekdays-View":{"title":"Add Weekdays View","abstract":[{"type":"text","text":"Improve the user interface by adding weekdays and a header view."}],"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","kind":"section","type":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/improveuserinterface#Add-Weekdays-View"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay#Implement-Your-Custom-Special-Day":{"url":"\/tutorials\/obiletcalendar\/implementspecialday#Implement-Your-Custom-Special-Day","kind":"section","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day","type":"section","role":"pseudoSymbol","title":"Implement Your Custom Special Day","abstract":[{"type":"text","text":"some texy"}]},"doc://ObiletCalendar/documentation/ObiletCalendar/OBCalendar/init(calendar:startingDate:endingDate:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)":{"kind":"symbol","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBCalendar\/init(calendar:startingDate:endingDate:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/obiletcalendar\/obcalendar\/init(calendar:startingdate:endingdate:lazyyears:lazymonths:lazydays:daycontent:monthcontent:yearcontent:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"calendar"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation8CalendarV","text":"Calendar"},{"kind":"text","text":", "},{"text":"startingDate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"endingDate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":", "},{"text":"lazyYears","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"lazyMonths","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"lazyDays","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dayContent"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"model","kind":"internalParam"},{"kind":"text","text":": (year"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO","text":"CalendarModel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Year","preciseIdentifier":"s:14ObiletCalendar0B5ModelO4YearV","kind":"typeIdentifier"},{"kind":"text","text":", month"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CalendarModel","preciseIdentifier":"s:14ObiletCalendar0B5ModelO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO5MonthV","text":"Month","kind":"typeIdentifier"},{"kind":"text","text":", day"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO","text":"CalendarModel"},{"text":".","kind":"text"},{"text":"Day","preciseIdentifier":"s:14ObiletCalendar0B5ModelO3DayV","kind":"typeIdentifier"},{"text":"), ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"scrollProxy"},{"kind":"text","text":": (year"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV","text":"ScrollViewProxy"},{"text":"?, month","kind":"text"},{"kind":"text","text":": "},{"text":"ScrollViewProxy","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV","kind":"typeIdentifier"},{"text":"?, day","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV","text":"ScrollViewProxy","kind":"typeIdentifier"},{"text":"?)) -> ","kind":"text"},{"text":"Day","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV3Dayq0_mfp"},{"kind":"text","text":", "},{"text":"monthContent","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"model"},{"kind":"text","text":": (year"},{"kind":"text","text":": "},{"text":"CalendarModel","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO"},{"kind":"text","text":"."},{"text":"Year","preciseIdentifier":"s:14ObiletCalendar0B5ModelO4YearV","kind":"typeIdentifier"},{"text":", month","kind":"text"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO","text":"CalendarModel"},{"kind":"text","text":"."},{"text":"Month","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO5MonthV"},{"text":"), ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"scrollProxy"},{"kind":"text","text":": (year"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV","text":"ScrollViewProxy","kind":"typeIdentifier"},{"kind":"text","text":"?, month"},{"text":": ","kind":"text"},{"text":"ScrollViewProxy","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV"},{"text":"?), ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"daysView"},{"text":": ","kind":"text"},{"text":"OBCollectionView","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar16OBCollectionViewV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV3Dayq0_mfp","text":"Day"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"CalendarModel","preciseIdentifier":"s:14ObiletCalendar0B5ModelO"},{"text":".","kind":"text"},{"text":"Day","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO3DayV"},{"text":">) -> ","kind":"text"},{"text":"Month","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV5Monthq_mfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"yearContent"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"year","kind":"internalParam"},{"kind":"text","text":": "},{"text":"CalendarModel","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO"},{"kind":"text","text":"."},{"text":"Year","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO4YearV"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"scrollProxy","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScrollViewProxy","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV"},{"text":"?, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"monthsView","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"OBCollectionView","preciseIdentifier":"s:14ObiletCalendar16OBCollectionViewV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Month","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV5Monthq_mfp"},{"text":", ","kind":"text"},{"text":"CalendarModel","preciseIdentifier":"s:14ObiletCalendar0B5ModelO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Month","preciseIdentifier":"s:14ObiletCalendar0B5ModelO5MonthV","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Year","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV4Yearxmfp"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Year"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"View"},{"type":"text","text":", "},{"type":"codeVoice","code":"Month"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"View"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Day"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}]},"title":"init(calendar:startingDate:endingDate:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)"},"c1-t2-s1-step5.swift":{"syntax":"swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","        ","    var body: some View {","        VStack {","            calendarView","        }","        .padding()","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            daysView","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","","    }","","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","","","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""],"highlights":[{"line":19},{"line":22},{"line":83},{"line":84},{"line":85}],"identifier":"c1-t2-s1-step5.swift","fileType":"swift","fileName":"OBCalendarDemo.swift","type":"file"},"doc://ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/RangeType-swift.enum":{"role":"symbol","abstract":[],"kind":"symbol","title":"CalendarModel.Day.RangeType","url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/rangetype-swift.enum","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RangeType"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RangeType"}]},"c1-t2-s1-step3.png":{"alt":"desc","identifier":"c1-t2-s1-step3.png","variants":[{"traits":["1x","light"],"url":"\/images\/c1-t2-s1-step3.png"}],"type":"image"},"c1-t2-s1-step4.png":{"alt":"desc","identifier":"c1-t2-s1-step4.png","type":"image","variants":[{"url":"\/images\/c1-t2-s1-step4.png","traits":["1x","light"]}]},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Implement-Single-Date-Selection":{"title":"Implement Single Date Selection","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date"}],"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection","kind":"section","type":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Implement-Single-Date-Selection"},"doc://ObiletCalendar/tutorials/ObiletCalendar":{"type":"topic","kind":"overview","title":"Meet ObiletCalendar","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar","role":"overview","abstract":[{"text":"Create easily your custom calendar","type":"text"}],"url":"\/tutorials\/obiletcalendar"},"doc://ObiletCalendar/documentation/ObiletCalendar/OBCalendar/init(years:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)":{"url":"\/documentation\/obiletcalendar\/obcalendar\/init(years:lazyyears:lazymonths:lazydays:daycontent:monthcontent:yearcontent:)","abstract":[],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"years","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"CalendarModel","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO4YearV","text":"Year"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"lazyYears"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"lazyMonths"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"lazyDays"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"dayContent","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"model","kind":"internalParam"},{"text":": (year","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO","text":"CalendarModel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Year","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO4YearV"},{"text":", month","kind":"text"},{"kind":"text","text":": "},{"text":"CalendarModel","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO"},{"text":".","kind":"text"},{"text":"Month","preciseIdentifier":"s:14ObiletCalendar0B5ModelO5MonthV","kind":"typeIdentifier"},{"text":", day","kind":"text"},{"kind":"text","text":": "},{"text":"CalendarModel","preciseIdentifier":"s:14ObiletCalendar0B5ModelO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Day","preciseIdentifier":"s:14ObiletCalendar0B5ModelO3DayV","kind":"typeIdentifier"},{"text":"), ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"scrollProxy"},{"kind":"text","text":": (year"},{"kind":"text","text":": "},{"text":"ScrollViewProxy","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV","kind":"typeIdentifier"},{"text":"?, month","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV","text":"ScrollViewProxy","kind":"typeIdentifier"},{"kind":"text","text":"?, day"},{"text":": ","kind":"text"},{"text":"ScrollViewProxy","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV"},{"text":"?)) -> ","kind":"text"},{"preciseIdentifier":"s:14ObiletCalendar10OBCalendarV3Dayq0_mfp","text":"Day","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"monthContent"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"model","kind":"internalParam"},{"text":": (year","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO","text":"CalendarModel","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO4YearV","text":"Year","kind":"typeIdentifier"},{"text":", month","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO","kind":"typeIdentifier","text":"CalendarModel"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Month","preciseIdentifier":"s:14ObiletCalendar0B5ModelO5MonthV"},{"text":"), ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"scrollProxy","kind":"internalParam"},{"text":": (year","kind":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV","text":"ScrollViewProxy"},{"kind":"text","text":"?, month"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScrollViewProxy","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV"},{"text":"?), ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"daysView"},{"text":": ","kind":"text"},{"text":"OBCollectionView","preciseIdentifier":"s:14ObiletCalendar16OBCollectionViewV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Day","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV3Dayq0_mfp"},{"text":", ","kind":"text"},{"text":"CalendarModel","preciseIdentifier":"s:14ObiletCalendar0B5ModelO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Day","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO3DayV"},{"text":">) -> ","kind":"text"},{"text":"Month","kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV5Monthq_mfp"},{"text":", ","kind":"text"},{"text":"yearContent","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"year"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO","text":"CalendarModel","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Year","preciseIdentifier":"s:14ObiletCalendar0B5ModelO4YearV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"scrollProxy","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ScrollViewProxy","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI15ScrollViewProxyV"},{"kind":"text","text":"?, "},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"monthsView"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14ObiletCalendar16OBCollectionViewV","text":"OBCollectionView","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Month","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV5Monthq_mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar0B5ModelO","text":"CalendarModel"},{"kind":"text","text":"."},{"preciseIdentifier":"s:14ObiletCalendar0B5ModelO5MonthV","text":"Month","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14ObiletCalendar10OBCalendarV4Yearxmfp","text":"Year"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(years:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)","conformance":{"constraints":[{"code":"Year","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":", "},{"type":"codeVoice","code":"Month"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"View"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Day"},{"type":"text","text":" conforms to "},{"code":"View","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBCalendar\/init(years:lazyYears:lazyMonths:lazyDays:dayContent:monthContent:yearContent:)","role":"symbol"},"c1-t2-s1-step1.swift":{"highlights":[],"fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","","struct OBCalendarDemo: View {","    var body: some View {","        VStack {","            Image(systemName: \"globe\")","                .imageScale(.large)","                .foregroundStyle(.tint)","            Text(\"Hello, world!\")","        }","        .padding()","    }","}","","","#Preview {","    OBCalendarDemo()","}",""],"identifier":"c1-t2-s1-step1.swift","fileType":"swift","syntax":"swift","type":"file"},"c1-t2-s1-step7.swift":{"highlights":[{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69}],"fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","        ","    var body: some View {","        VStack {","            calendarView","        }","        .padding()","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","","","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""],"fileType":"swift","identifier":"c1-t2-s1-step7.swift","syntax":"swift","type":"file"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","abstract":[{"type":"text","text":"Some Text"}],"role":"project","type":"topic","kind":"project","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection","estimatedTime":"30min","title":"Implement Double Date Selection"},"c1-t2-s1-step8.png":{"type":"image","identifier":"c1-t2-s1-step8.png","alt":"desc","variants":[{"traits":["1x","light"],"url":"\/images\/c1-t2-s1-step8.png"}]},"c1-t2-s1-step8.swift":{"highlights":[{"line":42}],"fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","        ","    var body: some View {","        VStack {","            calendarView","        }","        .padding()","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding([.top,.bottom],8)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","","","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""],"fileType":"swift","identifier":"c1-t2-s1-step8.swift","syntax":"swift","type":"file"},"c1-t2-s1-step6.swift":{"highlights":[{"line":31}],"fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","        ","    var body: some View {","        VStack {","            calendarView","        }","        .padding()","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            daysView","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","","    }","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","","","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""],"identifier":"c1-t2-s1-step6.swift","fileType":"swift","syntax":"swift","type":"file"},"c1-t2-s1-step5.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/c1-t2-s1-step5.png"}],"identifier":"c1-t2-s1-step5.png","type":"image","alt":"desc"},"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView#Add-a-customization-view":{"abstract":[],"type":"section","role":"pseudoSymbol","title":"Add a customization view","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view","url":"\/tutorials\/obiletcalendar\/createskeletonview#Add-a-customization-view","kind":"section"},"doc://ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection":{"role":"project","abstract":[{"type":"text","text":"In future , will shown double selection so refactor this code."}],"kind":"project","title":"Refactor Implement Single Date Selection","url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection","type":"topic","estimatedTime":"20min"},"doc://ObiletCalendar/documentation/ObiletCalendar/OBCalendar":{"kind":"symbol","url":"\/documentation\/obiletcalendar\/obcalendar","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OBCalendar","kind":"identifier"}],"title":"OBCalendar","navigatorTitle":[{"text":"OBCalendar","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/OBCalendar","role":"symbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface":{"kind":"project","url":"\/tutorials\/obiletcalendar\/improveuserinterface","abstract":[{"type":"text","text":"Improve the user interface by adding weekdays and a header view."}],"estimatedTime":"15min","title":"Improve User Interface","type":"topic","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","role":"project"},"doc://ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection#IDK":{"type":"section","role":"pseudoSymbol","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#IDK","kind":"section","url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection#IDK","abstract":[{"text":"In future , will shown double selection so refactor this code.","type":"text"}],"title":"IDK"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay":{"kind":"project","url":"\/tutorials\/obiletcalendar\/implementspecialday","abstract":[{"type":"text","text":"some texy"}],"estimatedTime":"10min","title":"Implement Special Day ","type":"topic","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay","role":"project"},"c1-t2-s1-step1.png":{"type":"image","identifier":"c1-t2-s1-step1.png","alt":"desc","variants":[{"traits":["1x","light"],"url":"\/images\/c1-t2-s1-step1.png"}]},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection":{"type":"topic","role":"project","estimatedTime":"15min","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date"}],"url":"\/tutorials\/obiletcalendar\/implementsingledateselection","kind":"project","title":"Implement Single Date Selection","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection"},"c1-t2-s1-step7.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/c1-t2-s1-step7.png"}],"identifier":"c1-t2-s1-step7.png","type":"image","alt":"desc"},"doc://ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Year":{"abstract":[],"title":"CalendarModel.Year","role":"symbol","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Year","url":"\/documentation\/obiletcalendar\/calendarmodel\/year","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Year","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Year","kind":"identifier"}]},"c1-t2-s1-step3.swift":{"highlights":[{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":73},{"line":74},{"line":75}],"fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Image(systemName: \"globe\")","                .imageScale(.large)","                .foregroundStyle(.tint)","            Text(\"Hello, world!\")","        }","        .padding()","    }","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        ","        let nineOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 9)","        let nineOctober = Calendar.current.date(from: nineOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: nineOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? date","        }","        return date","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""],"identifier":"c1-t2-s1-step3.swift","fileType":"swift","syntax":"swift","type":"file"},"c1-t2-s1-step6.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/c1-t2-s1-step6.png"}],"identifier":"c1-t2-s1-step6.png","type":"image","alt":"desc"},"c1-t2-s1-step2.png":{"type":"image","identifier":"c1-t2-s1-step2.png","alt":"desc","variants":[{"traits":["1x","light"],"url":"\/images\/c1-t2-s1-step2.png"}]},"doc://ObiletCalendar/tutorials/ObiletCalendar/Improve-User-Interface":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface","abstract":[],"type":"topic","url":"\/tutorials\/obiletcalendar\/improve-user-interface","role":"article","kind":"article","title":"Improve User Interface"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView":{"kind":"project","url":"\/tutorials\/obiletcalendar\/changedayview","abstract":[{"type":"text","text":"Change view of "},{"type":"codeVoice","code":"day"},{"text":" by ","type":"text"},{"overridingTitle":"Date Type","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Date Type"}],"type":"reference","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType"},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","overridingTitle":"Range Type","overridingTitleInlineContent":[{"text":"Range Type","type":"text"}],"type":"reference"}],"estimatedTime":"15min","title":"Change Day View ","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","type":"topic","role":"project"},"c1-t2-s1-step4.swift":{"highlights":[{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":48},{"line":49},{"line":51},{"line":80},{"line":82}],"fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Image(systemName: \"globe\")","                .imageScale(.large)","                .foregroundStyle(.tint)","            Text(\"Hello, world!\")","        }","        .padding()","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            daysView","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","","    }","","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""],"fileType":"swift","identifier":"c1-t2-s1-step4.swift","syntax":"swift","type":"file"},"c1-t2-s1-step2.swift":{"highlights":[{"line":9}],"fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    var body: some View {","        VStack {","            Image(systemName: \"globe\")","                .imageScale(.large)","                .foregroundStyle(.tint)","            Text(\"Hello, world!\")","        }","        .padding()","    }","}","","","#Preview {","    OBCalendarDemo()","}",""],"identifier":"c1-t2-s1-step2.swift","fileType":"swift","syntax":"swift","type":"file"},"doc://ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection#Implement-Double-Date-Selection":{"kind":"section","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection#Implement-Double-Date-Selection","abstract":[{"type":"text","text":"Some Text"}],"title":"Implement Double Date Selection","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","type":"section","role":"pseudoSymbol"},"doc://ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject":{"kind":"project","url":"\/tutorials\/obiletcalendar\/setupemptyproject","abstract":[],"estimatedTime":"3min","title":"Setup Empty Project","type":"topic","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","role":"project"},"doc://ObiletCalendar/tutorials/ObiletCalendar/Create-Demo-Project":{"url":"\/tutorials\/obiletcalendar\/create-demo-project","title":"Create Demo Project","abstract":[],"type":"topic","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project","role":"article","kind":"article"},"doc://ObiletCalendar/tutorials/ObiletCalendar/Implement-Special-Day-View":{"identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View","abstract":[],"type":"topic","url":"\/tutorials\/obiletcalendar\/implement-special-day-view","role":"article","kind":"article","title":"Implement Special Day View"},"doc://ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/DateType":{"kind":"symbol","abstract":[],"role":"symbol","title":"CalendarModel.Day.DateType","type":"topic","identifier":"doc:\/\/ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","navigatorTitle":[{"kind":"identifier","text":"DateType"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateType","kind":"identifier"}],"url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/datetype"},"doc://ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView":{"role":"project","type":"topic","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView","title":"Create Skeleton View","url":"\/tutorials\/obiletcalendar\/createskeletonview","estimatedTime":"10min","kind":"project","abstract":[]},"doc://ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar":{"abstract":[],"type":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/setupemptyproject#Create-a-new-project-and-add-ObiletCalendar","identifier":"doc:\/\/ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","title":"Create a new project and add ObiletCalendar","kind":"section"}}}