{"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","kind":"task"}]},{"sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view","kind":"task"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project"},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface"},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days","kind":"task"}]}]},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection","projects":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection"}]},{"sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#Refactor"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection"},{"sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","kind":"task"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection"}]},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View","projects":[{"sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day","kind":"task"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay"}]}],"paths":[["doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/$volume","doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface"]],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar"},"sections":[{"chapter":"Improve User Interface","kind":"hero","title":"Improve User Interface","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Improve the user interface by adding weekdays and a header view."}]}],"estimatedTimeInMinutes":15},{"kind":"tasks","tasks":[{"stepsSection":[{"runtimePreview":"c2-t1-s1-step1.png","type":"step","content":[{"inlineContent":[{"type":"text","text":"Look at latest state of previous chapter"}],"type":"paragraph"}],"media":null,"caption":[],"code":"c2-t1-s1-step1.swift"},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"daysView"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"getShortLocalizedWeekdays"},{"text":" function and use it","type":"text"}]}],"type":"step","media":null,"code":"c2-t1-s1-step2.swift","runtimePreview":"c2-t1-s1-step2.png"},{"code":"c2-t1-s1-step3.swift","runtimePreview":"c2-t1-s1-step3.png","content":[{"inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"headerView"},{"text":" and use it","type":"text"}],"type":"paragraph"}],"caption":[],"media":null,"type":"step"},{"code":"c2-t1-s1-step4.swift","runtimePreview":"c2-t1-s1-step4.png","caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change background color of "},{"code":"headerView","type":"codeVoice"},{"type":"text","text":", add shadow to "},{"code":"daysView","type":"codeVoice"},{"type":"text","text":" and do some changes"}]}],"media":null}],"title":"Add Weekdays View","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Create weekdays view and add."}],"type":"paragraph"}]}],"anchor":"Add-Weekdays-View"}]},{"kind":"callToAction","action":{"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","overridingTitle":"Get started","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"title":"Change Day View ","featuredEyebrow":"Tutorial","abstract":[{"type":"text","text":"Change view of "},{"type":"codeVoice","code":"day"},{"type":"text","text":" by "},{"overridingTitleInlineContent":[{"text":"Date Type","type":"text"}],"isActive":true,"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitle":"Date Type","type":"reference"},{"type":"text","text":" and "},{"type":"reference","overridingTitleInlineContent":[{"text":"Range Type","type":"text"}],"isActive":true,"overridingTitle":"Range Type","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum"}]}],"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/obiletcalendar\/improveuserinterface"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"category":"Tutorial","categoryPathComponent":"ObiletCalendar","role":"project","title":"Improve User Interface"},"identifier":{"url":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","interfaceLanguage":"swift"},"references":{"c2-t1-s1-step3.png":{"alt":"desc","identifier":"c2-t1-s1-step3.png","type":"image","variants":[{"url":"\/images\/obcalendar.ObiletCalendar\/c2-t1-s1-step3.png","traits":["1x","light"]}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay#Implement-Your-Custom-Special-Day":{"abstract":[{"text":"Implement special day","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/implementspecialday#Implement-Your-Custom-Special-Day","title":"Implement Your Custom Special Day","type":"section","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day"},"c2-t1-s1-step1.swift":{"syntax":"swift","identifier":"c2-t1-s1-step1.swift","fileName":"OBCalendarDemo.swift","highlights":[],"fileType":"swift","type":"file","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","        ","    var body: some View {","        VStack {","            calendarView","        }","        .padding()","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding([.top,.bottom],8)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","","","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection":{"kind":"project","type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection","abstract":[{"type":"text","text":"In future , will shown double selection so refactor this code."}],"estimatedTime":"20min","url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection","title":"Refactor Implement Single Date Selection","role":"project"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject":{"url":"\/tutorials\/obiletcalendar\/setupemptyproject","type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","estimatedTime":"3min","title":"Setup Empty Project","kind":"project","role":"project","abstract":[]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection":{"role":"project","abstract":[{"type":"text","text":"Implement single date selection for users can select specific date"}],"type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","kind":"project","title":"Implement Single Date Selection","estimatedTime":"15min","url":"\/tutorials\/obiletcalendar\/implementsingledateselection"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection#Implement-Double-Date-Selection":{"title":"Implement Double Date Selection","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection#Implement-Double-Date-Selection","kind":"section","abstract":[{"text":"Some Text","type":"text"}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar":{"url":"\/tutorials\/obiletcalendar\/setupemptyproject#Create-a-new-project-and-add-ObiletCalendar","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","kind":"section","role":"pseudoSymbol","title":"Create a new project and add ObiletCalendar","abstract":[],"type":"section"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay":{"estimatedTime":"10min","kind":"project","type":"topic","url":"\/tutorials\/obiletcalendar\/implementspecialday","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay","abstract":[{"type":"text","text":"Implement special day"}],"role":"project","title":"Implement Special Day "},"c2-t1-s1-step2.swift":{"syntax":"swift","fileName":"OBCalendarDemo.swift","identifier":"c2-t1-s1-step2.swift","fileType":"swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","        ","    var body: some View {","        VStack {","            daysView","            calendarView","        }","        .padding()","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding([.top,.bottom],8)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}",""],"highlights":[{"line":22},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":81},{"line":82},{"line":83},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94}],"type":"file"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Implement-Single-Date-Selection":{"role":"pseudoSymbol","type":"section","abstract":[{"text":"Implement single date selection for users can select specific date","type":"text"}],"title":"Implement Single Date Selection","kind":"section","url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Implement-Single-Date-Selection","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection"},"c2-t1-s1-step4.swift":{"syntax":"swift","identifier":"c2-t1-s1-step4.swift","fileName":"OBCalendarDemo.swift","highlights":[{"line":26},{"line":27},{"line":31},{"line":32},{"line":33},{"line":46}],"fileType":"swift","type":"file","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","                .background(Color.red)","                .foregroundColor(.white)","            ","            daysView","                .padding(8)","                .background(Color.white)","                .compositingGroup()","                .shadow(color: .gray, radius: 1, x: 0, y: 2)","            calendarView","                .padding(4)","        }","        ","    }","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.white)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","                ","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","        ","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","    ","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"]},"c2-t1-s1-step4.png":{"identifier":"c2-t1-s1-step4.png","type":"image","alt":"desc","variants":[{"url":"\/images\/obcalendar.ObiletCalendar\/c2-t1-s1-step4.png","traits":["1x","light"]}]},"c2-t1-s1-step3.swift":{"syntax":"swift","identifier":"c2-t1-s1-step3.swift","fileName":"OBCalendarDemo.swift","highlights":[{"line":19},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":28},{"line":30},{"line":32},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":56},{"line":74},{"line":115}],"fileType":"swift","type":"file","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","            ","            daysView","                .padding(8)","            calendarView","                .padding(4)","        }","        ","    }","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.black)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","                ","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","        ","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","    ","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView":{"role":"project","abstract":[{"type":"text","text":"Change view of "},{"code":"day","type":"codeVoice"},{"type":"text","text":" by "},{"overridingTitle":"Date Type","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","isActive":true,"overridingTitleInlineContent":[{"text":"Date Type","type":"text"}],"type":"reference"},{"text":" and ","type":"text"},{"overridingTitleInlineContent":[{"text":"Range Type","type":"text"}],"overridingTitle":"Range Type","isActive":true,"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum"}],"type":"topic","url":"\/tutorials\/obiletcalendar\/changedayview","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","title":"Change Day View ","estimatedTime":"15min","kind":"project"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Implement-Date-Selection":{"abstract":[],"kind":"article","role":"article","url":"\/tutorials\/obiletcalendar\/implement-date-selection","title":"Implement Date Selection","type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar":{"role":"overview","abstract":[{"type":"text","text":"Create easily your custom calendar"}],"type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","kind":"overview","title":"Meet ObiletCalendar","url":"\/tutorials\/obiletcalendar"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection":{"estimatedTime":"30min","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","kind":"project","abstract":[{"type":"text","text":"Some Text"}],"url":"\/tutorials\/obiletcalendar\/implementdoubledateselection","role":"project","type":"topic","title":"Implement Double Date Selection"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView#Add-a-customization-view":{"url":"\/tutorials\/obiletcalendar\/createskeletonview#Add-a-customization-view","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view","kind":"section","title":"Add a customization view","abstract":[],"role":"pseudoSymbol","type":"section"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Improve-User-Interface":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface","kind":"article","role":"article","url":"\/tutorials\/obiletcalendar\/improve-user-interface","title":"Improve User Interface","type":"topic","abstract":[]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView":{"abstract":[],"role":"project","url":"\/tutorials\/obiletcalendar\/createskeletonview","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView","title":"Create Skeleton View","kind":"project","estimatedTime":"10min","type":"topic"},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/RangeType-swift.enum":{"type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","kind":"symbol","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RangeType","kind":"identifier"}],"url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/rangetype-swift.enum","title":"CalendarModel.Day.RangeType","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RangeType"}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface#Add-Weekdays-View":{"type":"section","title":"Add Weekdays View","abstract":[{"text":"Improve the user interface by adding weekdays and a header view.","type":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/improveuserinterface#Add-Weekdays-View"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Implement-Special-Day-View":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View","title":"Implement Special Day View","kind":"article","role":"article","abstract":[],"type":"topic","url":"\/tutorials\/obiletcalendar\/implement-special-day-view"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection#Refactor":{"url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection#Refactor","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#Refactor","title":"Refactor","kind":"section","abstract":[{"text":"In future , will shown double selection so refactor this code.","type":"text"}],"role":"pseudoSymbol","type":"section"},"c2-t1-s1-step2.png":{"identifier":"c2-t1-s1-step2.png","type":"image","alt":"desc","variants":[{"traits":["1x","light"],"url":"\/images\/obcalendar.ObiletCalendar\/c2-t1-s1-step2.png"}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Create-Demo-Project":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project","abstract":[],"url":"\/tutorials\/obiletcalendar\/create-demo-project","role":"article","type":"topic","kind":"article","title":"Create Demo Project"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface":{"abstract":[{"type":"text","text":"Improve the user interface by adding weekdays and a header view."}],"role":"project","url":"\/tutorials\/obiletcalendar\/improveuserinterface","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","title":"Improve User Interface","kind":"project","estimatedTime":"15min","type":"topic"},"c2-t1-s1-step1.png":{"identifier":"c2-t1-s1-step1.png","type":"image","alt":"desc","variants":[{"traits":["1x","light"],"url":"\/images\/obcalendar.ObiletCalendar\/c2-t1-s1-step1.png"}]},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/DateType":{"abstract":[],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","type":"topic","navigatorTitle":[{"text":"DateType","kind":"identifier"}],"kind":"symbol","title":"CalendarModel.Day.DateType","url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/datetype","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateType","kind":"identifier"}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView#Hide-Some-Days":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days","title":"Hide Some Days","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Change view of "},{"code":"day","type":"codeVoice"},{"type":"text","text":" by "},{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitleInlineContent":[{"type":"text","text":"Date Type"}],"isActive":true,"overridingTitle":"Date Type","type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","overridingTitle":"Range Type","type":"reference","overridingTitleInlineContent":[{"text":"Range Type","type":"text"}],"isActive":true}],"type":"section","url":"\/tutorials\/obiletcalendar\/changedayview#Hide-Some-Days"}}}