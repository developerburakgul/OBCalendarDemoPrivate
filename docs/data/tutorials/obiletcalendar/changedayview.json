{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView"},"sections":[{"estimatedTimeInMinutes":3,"kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change view of "},{"code":"day","type":"codeVoice"},{"type":"text","text":" by "},{"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","isActive":true,"overridingTitle":"Date Type","overridingTitleInlineContent":[{"type":"text","text":"Date Type"}]},{"type":"text","text":" and "},{"overridingTitleInlineContent":[{"text":"Range Type","type":"text"}],"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","isActive":true,"overridingTitle":"Range Type"}]}],"title":"Change Day View ","chapter":"Improve User Interface"},{"kind":"tasks","tasks":[{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Hide day of previous and next month.","type":"text"}],"type":"paragraph"}]}],"stepsSection":[{"runtimePreview":"c2-t2-s1-step1.png","code":"c2-t2-s1-step1.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Look at latest state of previous tutorial."}]}],"type":"step","media":null},{"caption":[],"media":null,"code":"c2-t2-s1-step2.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If day is in "},{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum\/insideRange(_:)","isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"insideRange"}],"overridingTitle":"insideRange"},{"type":"text","text":" and "},{"overridingTitle":"dateType","type":"reference","isActive":true,"overridingTitleInlineContent":[{"text":"dateType","type":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType"},{"type":"text","text":" of "},{"type":"codeVoice","code":"day"},{"type":"text","text":" is "},{"isActive":true,"overridingTitleInlineContent":[{"text":"currentMonth","type":"text"}],"type":"reference","overridingTitle":"currentMonth","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType\/currentMonth"},{"type":"text","text":", show view of "},{"type":"codeVoice","code":"day"},{"type":"text","text":" otherwise dont show."}]}],"runtimePreview":"c2-t2-s1-step2.png"},{"caption":[],"content":[{"inlineContent":[{"type":"text","text":"If day is in "},{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum\/insideRange(_:)","overridingTitle":"insideRange","overridingTitleInlineContent":[{"text":"insideRange","type":"text"}],"type":"reference","isActive":true},{"type":"text","text":" and "},{"overridingTitle":"dateType","type":"reference","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"dateType"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType"},{"type":"text","text":" of "},{"type":"codeVoice","code":"day"},{"text":" is ","type":"text"},{"overridingTitleInlineContent":[{"text":"currentMonth","type":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType\/currentMonth","isActive":true,"type":"reference","overridingTitle":"currentMonth"},{"text":" and date of ","type":"text"},{"type":"codeVoice","code":"day"},{"text":" less than today  , change foregroundColor as gray otherwise show dayâ€™s foreground as black.","type":"text"}],"type":"paragraph"}],"type":"step","code":"c2-t2-s1-step3.swift","media":null,"runtimePreview":"c2-t2-s1-step3.png"}],"title":"Hide Some Days","anchor":"Hide-Some-Days"}]},{"featuredEyebrow":"Tutorial","title":"Implement Single Date Selection","action":{"type":"reference","isActive":true,"overridingTitle":"Get started","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"abstract":[{"text":"Implement single date selection for users can select specific date.","type":"text"}],"kind":"callToAction"}],"kind":"project","hierarchy":{"modules":[{"projects":[{"sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","kind":"task"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject"},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView","sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view","kind":"task"}]}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project"},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface"},{"sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days","kind":"task"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView"}]},{"projects":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#Refactor"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection"},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","sections":[{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","kind":"task"}]}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection"},{"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day"}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay"}]}],"reference":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","paths":[["doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/$volume","doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface"]]},"metadata":{"categoryPathComponent":"ObiletCalendar","role":"project","category":"Tutorial","title":"Change Day View "},"variants":[{"paths":["\/tutorials\/obiletcalendar\/changedayview"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface":{"url":"\/tutorials\/obiletcalendar\/improveuserinterface","kind":"project","role":"project","estimatedTime":"5min","type":"topic","abstract":[{"text":"Improve the user interface by adding weekdays and a header view.","type":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface","title":"Improve User Interface"},"c2-t2-s1-step1.swift":{"syntax":"swift","type":"file","fileName":"OBCalendarDemo.swift","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","                .background(Color.red)","                .foregroundColor(.white)","            ","            daysView","                .padding(8)","                .background(Color.white)","                .compositingGroup()","                .shadow(color: .gray, radius: 1, x: 0, y: 2)","            calendarView","                .padding(4)","        }","        ","    }","    ","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.white)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            Text(\"\\(model.day.day)\")","                .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"],"identifier":"c2-t2-s1-step1.swift","fileType":"swift","highlights":[]},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/RangeType-swift.enum/insideRange(_:)":{"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"insideRange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DateType","preciseIdentifier":"s:14ObiletCalendar0B5ModelO3DayV8DateTypeO"},{"text":")","kind":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum\/insideRange(_:)","role":"symbol","url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/rangetype-swift.enum\/insiderange(_:)","kind":"symbol","title":"CalendarModel.Day.RangeType.insideRange(_:)"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection","estimatedTime":"10min","type":"topic","url":"\/tutorials\/obiletcalendar\/implementdoubledateselection","kind":"project","title":"Implement Double Date Selection","role":"project","abstract":[{"text":"Some Text","type":"text"}]},"c2-t2-s1-step3.png":{"type":"image","alt":"desc","identifier":"c2-t2-s1-step3.png","variants":[{"url":"\/images\/obcalendar.ObiletCalendar\/c2-t2-s1-step3.png","traits":["1x","light"]}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection","estimatedTime":"10min","url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection","type":"topic","kind":"project","title":"Refactor Implement Single Date Selection","role":"project","abstract":[{"text":"In future , will shown double selection so refactor this code.","type":"text"}]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementDoubleDateSelection#Implement-Double-Date-Selection":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementDoubleDateSelection#Implement-Double-Date-Selection","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"Some Text","type":"text"}],"url":"\/tutorials\/obiletcalendar\/implementdoubledateselection#Implement-Double-Date-Selection","title":"Implement Double Date Selection"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Implement-Special-Day-View":{"abstract":[],"role":"article","kind":"article","type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Special-Day-View","url":"\/tutorials\/obiletcalendar\/implement-special-day-view","title":"Implement Special Day View"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection","estimatedTime":"10min","type":"topic","url":"\/tutorials\/obiletcalendar\/implementsingledateselection","kind":"project","title":"Implement Single Date Selection","role":"project","abstract":[{"text":"Implement single date selection for users can select specific date.","type":"text"}]},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/DateType":{"kind":"symbol","type":"topic","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","title":"CalendarModel.Day.DateType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateType","kind":"identifier"}],"role":"symbol","abstract":[],"navigatorTitle":[{"text":"DateType","kind":"identifier"}],"url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/datetype"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Implement-Date-Selection":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Implement-Date-Selection","type":"topic","kind":"article","title":"Implement Date Selection","role":"article","abstract":[],"url":"\/tutorials\/obiletcalendar\/implement-date-selection"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay#Implement-Your-Custom-Special-Day":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay#Implement-Your-Custom-Special-Day","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"Implement special day.","type":"text"}],"url":"\/tutorials\/obiletcalendar\/implementspecialday#Implement-Your-Custom-Special-Day","title":"Implement Your Custom Special Day"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView#Hide-Some-Days":{"title":"Hide Some Days","type":"section","role":"pseudoSymbol","url":"\/tutorials\/obiletcalendar\/changedayview#Hide-Some-Days","abstract":[{"text":"Change view of ","type":"text"},{"type":"codeVoice","code":"day"},{"type":"text","text":" by "},{"overridingTitleInlineContent":[{"type":"text","text":"Date Type"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","isActive":true,"type":"reference","overridingTitle":"Date Type"},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","overridingTitle":"Range Type","type":"reference","overridingTitleInlineContent":[{"text":"Range Type","type":"text"}]}],"kind":"section","identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView#Hide-Some-Days"},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/RangeType-swift.enum":{"url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/rangetype-swift.enum","kind":"symbol","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","title":"CalendarModel.Day.RangeType","abstract":[],"role":"symbol","type":"topic","navigatorTitle":[{"text":"RangeType","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RangeType"}]},"c2-t2-s1-step1.png":{"identifier":"c2-t2-s1-step1.png","variants":[{"traits":["1x","light"],"url":"\/images\/obcalendar.ObiletCalendar\/c2-t2-s1-step1.png"}],"type":"image","alt":"desc"},"c2-t2-s1-step2.swift":{"content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","                .background(Color.red)","                .foregroundColor(.white)","            ","            daysView","                .padding(8)","                .background(Color.white)","                .compositingGroup()","                .shadow(color: .gray, radius: 1, x: 0, y: 2)","            calendarView","                .padding(4)","        }","        ","    }","    ","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.white)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            let day = model.day","            ZStack {","                if case .insideRange(.currentMonth) = day.rangeType {","                    Text(\"\\(day.day)\")","                }","            }","            .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"],"fileType":"swift","fileName":"OBCalendarDemo.swift","highlights":[{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72}],"type":"file","syntax":"swift","identifier":"c2-t2-s1-step2.swift"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ChangeDayView":{"estimatedTime":"3min","title":"Change Day View ","abstract":[{"type":"text","text":"Change view of "},{"type":"codeVoice","code":"day"},{"type":"text","text":" by "},{"overridingTitleInlineContent":[{"text":"Date Type","type":"text"}],"isActive":true,"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType","overridingTitle":"Date Type"},{"type":"text","text":" and "},{"overridingTitleInlineContent":[{"type":"text","text":"Range Type"}],"type":"reference","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/RangeType-swift.enum","isActive":true,"overridingTitle":"Range Type"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ChangeDayView","kind":"project","role":"project","url":"\/tutorials\/obiletcalendar\/changedayview","type":"topic"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSingleDateSelection#Implement-Single-Date-Selection":{"url":"\/tutorials\/obiletcalendar\/implementsingledateselection#Implement-Single-Date-Selection","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"Implement single date selection for users can select specific date.","type":"text"}],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSingleDateSelection#Implement-Single-Date-Selection","title":"Implement Single Date Selection"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView","estimatedTime":"5min","url":"\/tutorials\/obiletcalendar\/createskeletonview","type":"topic","kind":"project","title":"Create Skeleton View","role":"project","abstract":[]},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/CreateSkeletonView#Add-a-customization-view":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/CreateSkeletonView#Add-a-customization-view","type":"section","kind":"section","role":"pseudoSymbol","abstract":[],"title":"Add a customization view","url":"\/tutorials\/obiletcalendar\/createskeletonview#Add-a-customization-view"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject#Create-a-new-project-and-add-ObiletCalendar","type":"section","kind":"section","role":"pseudoSymbol","abstract":[],"title":"Create a new project and add ObiletCalendar","url":"\/tutorials\/obiletcalendar\/setupemptyproject#Create-a-new-project-and-add-ObiletCalendar"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImplementSpecialDay":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImplementSpecialDay","kind":"project","role":"project","estimatedTime":"7min","type":"topic","abstract":[{"text":"Implement special day.","type":"text"}],"url":"\/tutorials\/obiletcalendar\/implementspecialday","title":"Implement Special Day "},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar","kind":"overview","role":"overview","type":"topic","abstract":[{"text":"Create easily your custom calendar","type":"text"}],"url":"\/tutorials\/obiletcalendar","title":"Meet ObiletCalendar"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Create-Demo-Project":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Create-Demo-Project","kind":"article","role":"article","type":"topic","abstract":[],"url":"\/tutorials\/obiletcalendar\/create-demo-project","title":"Create Demo Project"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/SetupEmptyProject":{"url":"\/tutorials\/obiletcalendar\/setupemptyproject","kind":"project","role":"project","estimatedTime":"3min","type":"topic","abstract":[],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/SetupEmptyProject","title":"Setup Empty Project"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/RefactorImplementSingleDateSelection#Refactor":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/RefactorImplementSingleDateSelection#Refactor","kind":"section","role":"pseudoSymbol","type":"section","abstract":[{"text":"In future , will shown double selection so refactor this code.","type":"text"}],"url":"\/tutorials\/obiletcalendar\/refactorimplementsingledateselection#Refactor","title":"Refactor"},"c2-t2-s1-step3.swift":{"highlights":[{"line":66},{"line":67},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75}],"fileType":"swift","type":"file","content":["\/\/","\/\/  OBCalendarDemo.swift","\/\/  OBCalendarDemo","\/\/","\/\/  Created by Burak on 7.10.2024.","\/\/","","import SwiftUI","import ObiletCalendar","","struct OBCalendarDemo: View {","    let years: [CalendarModel.Year]","    let calendar: Calendar","    ","    init(calendar: Calendar) {","        self.calendar = calendar","        self.years = Self.getYears(from: calendar)","    }","    ","    var body: some View {","        VStack {","            Spacer()","            headerView","                .fixedSize(horizontal: false, vertical: true)","                .padding(16)","                .background(Color.red)","                .foregroundColor(.white)","            ","            daysView","                .padding(8)","                .background(Color.white)","                .compositingGroup()","                .shadow(color: .gray, radius: 1, x: 0, y: 2)","            calendarView","                .padding(4)","        }","    }","    ","    var headerView: some View {","        HStack {","            Image(systemName: \"calendar\")","            Text(\"Departure Date\")","            Spacer()","            Divider()","                .frame(width: 1)","                .background(Color.white)","            Image(systemName: \"checkmark\")","            Text(\"APPLY\")","        }","    }","    ","    var daysView: some View {","        let days = getShortLocalizedWeekdays(for: calendar)","        return HStack {","            ForEach(days.indices, id: \\.self) { index in","                Text(days[index])","                    .frame(maxWidth: .infinity)","            }","        }","    }","    ","    var calendarView: some View {","        OBCalendar(years: years) { model, scrollProxy in","            \/\/ Day View goes here","            let day = model.day","            let today = calendar.startOfDay(for: Date())","            let dayDate = calendar.startOfDay(for: day.date)","            ZStack {","                if case .insideRange(.currentMonth) = day.rangeType {","                    if (dayDate < today) {","                        Text(\"\\(day.day)\")","                            .foregroundColor(.gray)","                    }else {","                        Text(\"\\(day.day)\")","                    }","                }","            }","            .frame(width: 35, height: 35)","        } monthContent: { model, scrollProxy, daysView in","            \/\/ Month View goes here","            VStack {","                HStack {","                    Text(getMonthName(from: model.month.month))","                    Text(formatYear(model.year.year))","                }","                Divider()","                daysView","            }","            .padding(4)","        } yearContent: { model, scrollProxy, monthsView in","            \/\/ Year View goes here","            monthsView","        }","    }","    ","    func formatYear(_ year: Int) -> String {","        let numberFormatter = NumberFormatter()","        numberFormatter.numberStyle = .none","        return numberFormatter.string(from: NSNumber(value: year)) ?? \"\"","    }","    ","    func makeDate(from month: Int) -> Date {","        let components = DateComponents(month: month)","        return calendar.date(from: components) ?? Date()","    }","    ","    func getMonthName(","        from month: Int","    ) -> String {","        let date = makeDate(from: month)","        let dateFormatter = DateFormatter()","        dateFormatter.locale = Locale(identifier: calendar.locale?.identifier ?? \"\")","        dateFormatter.dateFormat = \"MMMM\"","        return dateFormatter.string(from: date)","    }","    ","    func getShortLocalizedWeekdays(","        for calendar: Calendar","    ) -> [String] {","        let firstWeekday = calendar.firstWeekday","        ","        let shortWeekdays = calendar.shortWeekdaySymbols","        let firstWeekdayIndex = firstWeekday - 1","        ","        let reorderedShortWeekdays = Array(shortWeekdays[firstWeekdayIndex...])","        + Array(shortWeekdays[..<firstWeekdayIndex])","        ","        return reorderedShortWeekdays","    }","}","","private extension OBCalendarDemo {","    static func getYears(from calendar: Calendar) -> [CalendarModel.Year] {","        let elevenOctoberDateComponents = DateComponents(year: 2024, month: 10, day: 11)","        let elevenOctober = Calendar.current.date(from: elevenOctoberDateComponents)!","        ","        let startingDayOfMonth = Self.getStartDayOfMonth(from: elevenOctober, calendar: calendar)","        let nextYear = calendar.date(byAdding: .year, value: 1, to: startingDayOfMonth)!","        let endingDayOfMonth = Self.getEndDayOfMonth(from: nextYear, calendar: calendar)","        ","        return CalendarModelBuilder.defaultLayout(","            calendar: calendar,","            startingDate: startingDayOfMonth,","            endingDate: endingDayOfMonth","        )","    }","    ","    static func getStartDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        let startDateComponents = DateComponents(","            year: calendar.component(.year, from: date),","            month: calendar.component(.month, from: date),","            day: 1","        )","        return calendar.date(from: startDateComponents) ?? Date()","    }","    ","    static func getEndDayOfMonth(from date: Date, calendar: Calendar) -> Date {","        ","        if let range = calendar.range(of: .day, in: .month, for: date) {","            let lastDay = range.count","            let endDateComponents = DateComponents(","                year: calendar.component(.year, from: date),","                month: calendar.component(.month, from: date),","                day: lastDay","            )","            return calendar.date(from: endDateComponents) ?? Date()","        }","        return Date()","    }","}","","#Preview {","    var calendar = Calendar.current","    calendar.locale = Locale(identifier: \"en_US\")","    return OBCalendarDemo(calendar: calendar)","}"],"fileName":"OBCalendarDemo.swift","identifier":"c2-t2-s1-step3.swift","syntax":"swift"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/Improve-User-Interface":{"url":"\/tutorials\/obiletcalendar\/improve-user-interface","kind":"article","role":"article","type":"topic","abstract":[],"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/Improve-User-Interface","title":"Improve User Interface"},"doc://obcalendar.ObiletCalendar/documentation/ObiletCalendar/CalendarModel/Day/DateType/currentMonth":{"title":"CalendarModel.Day.DateType.currentMonth","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentMonth","kind":"identifier"}],"abstract":[],"url":"\/documentation\/obiletcalendar\/calendarmodel\/day\/datetype\/currentmonth","role":"symbol","kind":"symbol","identifier":"doc:\/\/obcalendar.ObiletCalendar\/documentation\/ObiletCalendar\/CalendarModel\/Day\/DateType\/currentMonth","type":"topic"},"c2-t2-s1-step2.png":{"identifier":"c2-t2-s1-step2.png","variants":[{"traits":["1x","light"],"url":"\/images\/obcalendar.ObiletCalendar\/c2-t2-s1-step2.png"}],"type":"image","alt":"desc"},"doc://obcalendar.ObiletCalendar/tutorials/ObiletCalendar/ImproveUserInterface#Add-Weekdays-View":{"identifier":"doc:\/\/obcalendar.ObiletCalendar\/tutorials\/ObiletCalendar\/ImproveUserInterface#Add-Weekdays-View","type":"section","url":"\/tutorials\/obiletcalendar\/improveuserinterface#Add-Weekdays-View","kind":"section","title":"Add Weekdays View","role":"pseudoSymbol","abstract":[{"text":"Improve the user interface by adding weekdays and a header view.","type":"text"}]}}}